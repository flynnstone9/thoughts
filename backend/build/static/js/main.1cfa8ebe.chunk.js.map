{"version":3,"sources":["services/blogs.js","reducers/blogReducer.js","reducers/userReducer.js","reducers/notificationReducer.js","components/Blog.js","components/Blogform.js","services/users.js","reducers/allUsersReducer.js","components/Users.js","components/User.js","components/Blogdisplay.js","hooks/index.js","services/login.js","components/Loginform.js","components/Signupform.js","components/Notification.js","components/Nav.js","components/Blogposts.js","styles/theme.js","App.js","store.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","create","blogpost","config","headers","Authorization","post","like","put","id","comment","blogid","newComment","deleteBlog","delete","updateToken","newToken","createNewBlog","newBlog","dispatch","blogService","blog","type","likeBlog","blogToLike","updatedBlog","addUserComment","deleteUsersBlog","console","log","blogReducer","state","action","concat","map","filter","setCurrentUser","user","userReducer","setNotification","timer","msg","isError","secondsToDisplayMsg","clearTimeout","createNotification","setTimeout","clearNotification","message","notificationReducer","Blog","useDispatch","likePost","err","className","to","style","textDecoration","title","users","username","onClick","likes","Blogform","createBlog","useState","setTitle","thought","setThought","useSelector","addBlog","e","preventDefault","url","handleTitleChange","target","value","handleThoughtChange","formStyles","opacity","onSubmit","autoComplete","TextField","placeholder","name","onChange","color","disabled","multiline","rows","variant","Button","signUpUser","userCredentials","getUsers","setAllUsers","usersService","allUsersReducer","Users","allUsers","useEffect","key","blogs","length","User","match","useRouteMatch","userID","params","find","userInformation","Blogdisplay","setNewComment","history","useHistory","blogID","signedInUserName","window","confirm","push","addComment","comments","c","i","useField","setValue","inputValues","event","reset","useModal","open","setOpen","flipModalState","loginUser","Loginform","isSignInModalOpen","inputUN","useRef","inputPW","login","un","pw","password","loginService","localStorage","setItem","JSON","stringify","current","Dialog","onClose","aria-labelledby","ref","Signupform","isSignUpModalOpen","signup","userService","newUser","Notification","notifications","backgroundColor","background","Nav","signInModal","signUpModal","activeClassName","removeItem","Blogposts","exception","path","sort","b","Tooltip","placement","arrow","exact","from","theme","createMuiTheme","palette","primary","main","secondary","overrides","MuiBackdrop","root","MuiPaper","display","flexDirection","borderRadius","height","rounded","MuiDialog","container","paperWidthSm","width","maxWidth","paper","margin","App","parse","getItem","content","Container","ThemeProvider","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cfa8ebe.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst updateToken = (newToken) => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\nconst create = async (blogpost) => {\n    const config = { headers: { Authorization: token } }\n\n    const response = await axios.post(baseUrl, blogpost, config)\n    return response.data\n}\n\nconst like = async (blogpost) => {\n    const response = await axios.put(`${baseUrl}/like/${blogpost.id}`, blogpost)\n    return response.data\n}\n\nconst comment = async (blogid, comment) => {\n    const newComment = {\n        comment: comment,\n    }\n    const response = await axios.put(`${baseUrl}/comment/${blogid}`, newComment)\n    return response.data\n}\n\nconst deleteBlog = async (id) => {\n    const config = { headers: { Authorization: token } }\n    await axios.delete(`${baseUrl}/${id}`, config)\n}\n\nexport default { getAll, create, like, comment, deleteBlog, updateToken }\n","import blogService from '../services/blogs'\n\nconst blogReducer = (state = [], action) => {\n    // console.log(state, ' state in notification reducers')\n    switch (action.type) {\n        case 'CREATE_BLOG':\n            return state.concat(action.data)\n        case 'UPDATE_BLOG':\n            return state.map((blog) => (blog.id === action.data.id ? action.data : blog))\n        case 'DELETE_BLOG':\n            return state.filter((blog) => blog.id !== action.data)\n        case 'INIT_BLOGS':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const initBlogs = () => {\n    return async (dispatch) => {\n        const content = await blogService.getAll()\n        dispatch({\n            type: 'INIT_BLOGS',\n            data: content,\n        })\n    }\n}\n\nexport const createNewBlog = (newBlog) => {\n    return async (dispatch) => {\n        let blog = await blogService.create(newBlog)\n        dispatch({\n            type: 'CREATE_BLOG',\n            data: blog,\n        })\n    }\n}\n\nexport const likeBlog = (blogToLike) => {\n    return async (dispatch) => {\n        const updatedBlog = await blogService.like(blogToLike)\n        dispatch({\n            type: 'UPDATE_BLOG',\n            data: updatedBlog,\n        })\n    }\n}\n\nexport const addUserComment = (blogToLike, comment) => {\n    return async (dispatch) => {\n        const updatedBlog = await blogService.comment(blogToLike, comment)\n        dispatch({\n            type: 'UPDATE_BLOG',\n            data: updatedBlog,\n        })\n    }\n}\n\nexport const deleteUsersBlog = (id) => {\n    // if (window.confirm('Are you sure you want to delete this blog?')) {\n    return async (dispatch) => {\n        console.log(id, 'id to delete + running dispatch delete fn')\n        await blogService.deleteBlog(id)\n        dispatch({\n            type: 'DELETE_BLOG',\n            data: id,\n        })\n    }\n    // }\n}\n\nexport default blogReducer\n","import blogService from '../services/blogs'\n\nconst userReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SET_USER':\n            return action.data\n        case 'LOGOUT_USER':\n            return null\n        default:\n            return state\n    }\n}\n\nexport const setCurrentUser = (user) => {\n    return async (dispatch) => {\n        dispatch({\n            type: 'SET_USER',\n            data: user,\n        })\n        blogService.updateToken(user.token)\n    }\n}\n\nexport const removeCurrentUser = () => {\n    return async (dispatch) => {\n        dispatch({\n            type: 'LOGOUT_USER',\n        })\n    }\n}\n\nexport default userReducer\n","const notificationReducer = (state = null, action) => {\n    // console.log(state, ' state in notification reducers')\n    switch (action.type) {\n        case 'SHOW_NOTIFICATION':\n            return action.data\n        case 'CLEAR_NOTIFICATION':\n            return null\n        default:\n            return state\n    }\n}\n\nexport const setNotification = (function () {\n    let timer\n    return function (msg, isError, secondsToDisplayMsg) {\n        return async function (dispatch) {\n            clearTimeout(timer)\n            dispatch(createNotification(msg, isError))\n            timer = setTimeout(function () {\n                dispatch(clearNotification())\n            }, secondsToDisplayMsg * 1000)\n        }\n    }\n})()\n\nexport const createNotification = (message, isError) => {\n    return {\n        type: 'SHOW_NOTIFICATION',\n        data: {\n            message,\n            isError,\n        },\n    }\n}\n\nexport const clearNotification = () => {\n    return {\n        type: 'CLEAR_NOTIFICATION',\n    }\n}\n\nexport default notificationReducer\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { likeBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n// import { Card } from '@material-ui/core'\n// import FavoriteIcon from '@material-ui/icons/Favorite'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\n// import PropTypes from 'prop-types'\n\nconst Blog = ({ blog }) => {\n    const dispatch = useDispatch()\n\n    const likePost = async () => {\n        try {\n            dispatch(likeBlog(blog))\n            dispatch(setNotification('LIKED', false, 4))\n        } catch (err) {\n            console.log(err, 'blog like err')\n        }\n    }\n\n    return (\n        <div className=\"thought\">\n            <Link className=\"thouhgt__link\" to={`/thoughts/${blog.id}`} style={{ textDecoration: 'none' }}>\n                <div className=\"thouhgt__maincontent\">\n                    <div className=\"thouhgt__title\">{blog.title}</div>\n                    <div className=\"thouhgt__user\">/user/{blog.users.username}</div>\n                </div>\n            </Link>\n            <div className=\"thouhgt__action\" onClick={likePost}>\n                <FavoriteBorderIcon className=\"thouhgt__likeicon\" />\n                <span className=\"thouhgt__likenumber\">{blog.likes}</span>\n                {/* <div>10/29/2929</div> */}\n            </div>\n        </div>\n    )\n}\n\n// Blog.propTypes = {\n//     blog: PropTypes.object,\n//     deleteBlog: PropTypes.func,\n//     user: PropTypes.object,\n// }\n\nexport default Blog\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { TextField, Button } from '@material-ui/core'\n\nexport default function Blogform({ createBlog }) {\n    const dispatch = useDispatch()\n    const [title, setTitle] = useState('')\n    const [thought, setThought] = useState('')\n\n    const user = useSelector((state) => state.user)\n\n    const addBlog = async (e) => {\n        e.preventDefault()\n\n        if (title !== '' && thought !== '') {\n            const newBlog = {\n                title,\n                thought,\n                url: 'na',\n            }\n\n            createBlog(newBlog)\n            setTitle('')\n            setThought('')\n        } else {\n            dispatch(setNotification('Add a Title and a Thought', true, 7))\n        }\n    }\n\n    const handleTitleChange = (e) => {\n        e.preventDefault()\n        setTitle(e.target.value)\n    }\n\n    const handleThoughtChange = (e) => {\n        e.preventDefault()\n        setThought(e.target.value)\n    }\n\n    const formStyles = user ? null : { opacity: '0.6' }\n\n    return (\n        <div className=\"form__container\" style={formStyles}>\n            <form className=\"form\" onSubmit={addBlog} autoComplete=\"off\">\n                {user ? (\n                    <TextField\n                        className=\"form__input\"\n                        placeholder=\"title\"\n                        type=\"text\"\n                        name=\"title\"\n                        value={title}\n                        onChange={handleTitleChange}\n                        color=\"secondary\"\n                    />\n                ) : (\n                    <TextField\n                        className=\"form__input\"\n                        placeholder=\"title\"\n                        type=\"text\"\n                        name=\"title\"\n                        onChange={handleTitleChange}\n                        color=\"secondary\"\n                        disabled\n                    />\n                )}\n                {user ? (\n                    <TextField\n                        className=\"form__input\"\n                        placeholder=\"what's your thought\"\n                        type=\"text\"\n                        name=\"thought\"\n                        onChange={handleThoughtChange}\n                        value={thought}\n                        id=\"filled-multiline-static\"\n                        multiline\n                        rows={5}\n                        variant=\"filled\"\n                        color=\"secondary\"\n                    />\n                ) : (\n                    <TextField\n                        className=\"form__input\"\n                        placeholder=\"what's your thought\"\n                        type=\"text\"\n                        name=\"thought\"\n                        onChange={handleThoughtChange}\n                        id=\"filled-multiline-static\"\n                        multiline\n                        rows={5}\n                        variant=\"filled\"\n                        color=\"secondary\"\n                        disabled\n                    />\n                )}\n\n                {user ? (\n                    <Button className=\"form__btn form__btn--glow form__btn--primary\" type=\"submit\">\n                        Add Thought...\n                    </Button>\n                ) : (\n                    <Button className=\"form__btn form__btn--primary\" type=\"submit\" disabled>\n                        Add Thought...\n                    </Button>\n                )}\n            </form>\n        </div>\n    )\n}\n","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst signUpUser = async (userCredentials) => {\n    const response = await axios.post(baseUrl, userCredentials)\n    return response.data\n}\n\nconst getUsers = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\nexport default { signUpUser, getUsers }\n","import usersService from '../services/users'\n\nconst allUsersReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SET_USERS':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setAllUsers = () => {\n    return async (dispatch) => {\n        const users = await usersService.getUsers()\n        dispatch({\n            type: 'SET_USERS',\n            data: users,\n        })\n    }\n}\n\nexport default allUsersReducer\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { setAllUsers } from '../reducers/allUsersReducer'\n\nimport '../styles/users.scss'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\n\nconst Users = () => {\n    const dispatch = useDispatch()\n    const users = useSelector((state) => state.allUsers)\n\n    useEffect(() => {\n        dispatch(setAllUsers())\n    }, [dispatch])\n\n    // console.log(users, 'users in the users component')\n\n    return (\n        <div className=\"users\">\n            <div className=\"users__header\">\n                <div className=\"users__header__title\">\n                    <AccountCircleIcon className=\"users__icon\" />\n                    <div className=\"users__title\">Users</div>\n                </div>\n                <div className=\"users__header__info\"># of Thoughts</div>\n            </div>\n\n            <div className=\"users__informationContainer\">\n                {users &&\n                    users.map((user) => {\n                        return (\n                            <Link className=\"users__link\" to={`/users/${user.id}`} key={user.id}>\n                                <div className=\"users__user\">\n                                    <div>{user.username}</div>\n                                    <div className=\"users__bloglegnth\">{user.blogs.length}</div>\n                                </div>\n                            </Link>\n                        )\n                    })}\n            </div>\n        </div>\n    )\n}\n\nexport default Users\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setAllUsers } from '../reducers/allUsersReducer'\nimport { useRouteMatch, Link } from 'react-router-dom'\n\nimport '../styles/users.scss'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\n\nconst User = () => {\n    const dispatch = useDispatch()\n    const { allUsers } = useSelector((state) => state)\n\n    useEffect(() => {\n        dispatch(setAllUsers())\n    }, [dispatch])\n\n    const match = useRouteMatch('/users/:id')\n    const userID = match ? match.params.id : null\n\n    const user = allUsers ? allUsers.find((user) => user.id === userID) : null\n\n    const userInformation = () => {\n        if (user) {\n            return (\n                <div className=\"users\">\n                    <div>\n                        <div className=\"users__user__usertitle\">viewing user:</div>\n\n                        <div className=\"users__user__currentUserHeader\">\n                            <AccountCircleIcon className=\"user__text--orange\" />\n                            <div className=\"users__user__username user__text--orange\">{user.username}</div>\n                        </div>\n                    </div>\n                    <ul className=\"users__informationContainer\">\n                        <div className=\"users__user__usertitle\">Thoughts Submitted:</div>\n                        {user.blogs.map((blog) => {\n                            return (\n                                <Link to={`/thoughts/${blog.id}`} className=\"users__link\" key={blog.id}>\n                                    <li className=\"users__user\">\n                                        <div className=\"user__text--orange\">{blog.title}</div>\n                                        <div className=\"users__user__likes\">\n                                            <FavoriteBorderIcon className=\"user__text--orange\" />\n                                            <div className=\"users__user__likesnumber user__text--orange\">\n                                                {blog.likes}\n                                            </div>\n                                        </div>\n                                    </li>\n                                </Link>\n                            )\n                        })}\n                    </ul>\n                </div>\n            )\n        }\n    }\n\n    return <div>{userID ? userInformation() : null}</div>\n}\n\nexport default User\n","import React, { useState } from 'react'\nimport { useRouteMatch, useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { likeBlog, addUserComment, deleteUsersBlog } from '../reducers/blogReducer'\n\nimport { setNotification } from '../reducers/notificationReducer'\n\nimport { Link } from 'react-router-dom'\n\nimport { TextField, Button } from '@material-ui/core'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport '../styles/thought__display.scss'\n\nconst Blogdisplay = () => {\n    const dispatch = useDispatch()\n    const { blogs, user } = useSelector((state) => state)\n\n    const [newComment, setNewComment] = useState('')\n\n    const history = useHistory()\n    const match = useRouteMatch('/thoughts/:id')\n    const blogID = match ? match.params.id : null\n    const signedInUserName = user ? user.name : null\n\n    const blog = blogs ? blogs.find((blog) => blog.id === blogID) : null\n\n    const likePost = async () => {\n        try {\n            dispatch(likeBlog(blog))\n        } catch (err) {\n            console.log(err, 'blog like err')\n        }\n    }\n\n    const deleteBlog = async (id) => {\n        if (window.confirm('Are you sure you want to delete this thought?')) {\n            try {\n                console.log('confirmed in app.js')\n                dispatch(deleteUsersBlog(id))\n                history.push('/')\n            } catch (err) {\n                dispatch(setNotification('Unauthorized to Delete This Thought', true, 4))\n            }\n        }\n    }\n\n    const addComment = async (e) => {\n        e.preventDefault()\n\n        if (newComment !== null || undefined || '') {\n            try {\n                dispatch(addUserComment(blogID, newComment))\n                dispatch(setNotification('Comment Added', false, 4))\n                setNewComment('')\n            } catch {\n                dispatch(setNotification('Comment Failed', true, 4))\n            }\n        } else {\n            dispatch(setNotification('comment empty', true, 4))\n        }\n    }\n\n    const handleCommentChange = (e) => {\n        e.preventDefault()\n        setNewComment(e.target.value)\n    }\n\n    return (\n        <>\n            {blog ? (\n                <>\n                    <div className=\"thought\">\n                        <div className=\"thought__display\">\n                            <div className=\"maincontent\">\n                                <div>\n                                    <h2 className=\"title\">{blog.title}</h2>\n                                    <div>\n                                        <Link className=\"user\" to={`/users/${blog.users.id}`}>\n                                            /users/{blog.users.username}\n                                        </Link>\n                                    </div>\n                                </div>\n                                <div className=\"content\">{blog.thought}</div>\n                            </div>\n\n                            <div className=\"actions\">\n                                <div className=\"likeaction\" onClick={likePost}>\n                                    <FavoriteBorderIcon className=\"likeicon\" />\n                                    <div className=\"likenumber\">{blog.likes}</div>\n                                </div>\n                                {blog.users.name === signedInUserName ? (\n                                    <div className=\"deleteaction\" onClick={() => deleteBlog(blog.id)}>\n                                        <DeleteIcon className=\"deleteicon\" />\n                                        <div className=\"deletetext\">DELETE</div>\n                                    </div>\n                                ) : null}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"comments\">\n                        <form className=\"form\">\n                            {/* <div className=\"form__title\">comments:</div> */}\n                            <TextField\n                                id=\"comment\"\n                                className=\"form__input\"\n                                placeholder=\"comment\"\n                                type=\"text\"\n                                name=\"comment\"\n                                // ref={comment}\n                                value={newComment}\n                                onChange={handleCommentChange}\n                                multiline\n                                rows={3}\n                                variant=\"filled\"\n                                color=\"secondary\"\n                            />\n                            <Button className=\"form__btn\" type=\"submit\" onClick={addComment}>\n                                Add Comment\n                            </Button>\n                        </form>\n\n                        {blog.comments[0] ? (\n                            <ul className=\"commentsection\">\n                                <div className=\"commentsection__title\">comments:</div>\n                                {blog.comments.map((c, i) => {\n                                    return (\n                                        <li className=\"commentsection__comment\" key={i}>\n                                            {c}\n                                        </li>\n                                    )\n                                })}\n                            </ul>\n                        ) : (\n                            <div className=\"commentsection\">no comments yet...</div>\n                        )}\n                    </div>\n                </>\n            ) : null}\n        </>\n    )\n}\n\nexport default Blogdisplay\n","import { useState } from 'react'\n\nexport const useField = (name) => {\n    const [value, setValue] = useState('')\n\n    const onChange = (event) => {\n        // console.log('value changed', event.target.value)\n        setValue(event.target.value)\n    }\n\n    const reset = () => setValue('')\n\n    return {\n        inputValues: {\n            name,\n            value,\n            onChange,\n        },\n        reset,\n    }\n}\n\nexport const useModal = () => {\n    const [open, setOpen] = useState(false)\n\n    const flipModalState = () => {\n        setOpen(!open)\n    }\n\n    return {\n        open,\n        flipModalState,\n    }\n}\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst loginUser = async (userCredentials) => {\n    const response = await axios.post(baseUrl, userCredentials)\n    return response.data\n}\n\nexport default { loginUser }\n","import React, { useRef } from 'react'\nimport loginService from '../services/login'\n\nimport { useDispatch } from 'react-redux'\nimport { setCurrentUser } from '../reducers/userReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nimport { TextField, Button, Dialog } from '@material-ui/core'\n\nimport '../styles/modal.scss'\n\nconst Loginform = ({ flipModalState, isSignInModalOpen }) => {\n    const dispatch = useDispatch()\n    const inputUN = useRef(null)\n    const inputPW = useRef(null)\n\n    const login = async (e) => {\n        e.preventDefault()\n        const un = e.target.username.value\n        const pw = e.target.password.value\n\n        try {\n            const user = await loginService.loginUser({ username: un, password: pw })\n\n            window.localStorage.setItem('loggedInBlogListUser', JSON.stringify(user))\n            dispatch(setCurrentUser(user))\n            dispatch(setNotification('You have logged in', false, 7))\n            flipModalState()\n        } catch (err) {\n            dispatch(setNotification('wrong un and pw', true, 7))\n            inputUN.current.value = ''\n            inputPW.current.value = ''\n            flipModalState()\n        }\n    }\n\n    return (\n        <>\n            <Dialog\n                className=\"modal\"\n                open={isSignInModalOpen}\n                onClose={flipModalState}\n                aria-labelledby=\"form-dialog-title-signin\"\n            >\n                <h2 className=\"modal__title\" id=\"form-dialog-title-signin\">\n                    Sign In\n                </h2>\n                <div className=\"modal__content\">\n                    <form className=\"modal__form\" onSubmit={login}>\n                        <TextField\n                            id=\"login__username\"\n                            className=\"modal__input\"\n                            placeholder=\"username\"\n                            type=\"text\"\n                            name=\"username\"\n                            ref={inputUN}\n                            color=\"secondary\"\n                        />\n                        <TextField\n                            id=\"login__password\"\n                            className=\"modal__input\"\n                            placeholder=\"password\"\n                            type=\"text\"\n                            name=\"password\"\n                            ref={inputPW}\n                            color=\"secondary\"\n                        />\n                        <p className=\"modal__note\">*case sensitive</p>\n                        <Button variant=\"contained\" className=\"modal__btn\" type=\"submit\">\n                            Login\n                        </Button>\n                    </form>\n                </div>\n            </Dialog>\n        </>\n    )\n}\n\nexport default Loginform\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport userService from '../services/users'\nimport loginService from '../services/login'\n\nimport { useField } from '../hooks/index'\nimport { useDispatch } from 'react-redux'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { setCurrentUser } from '../reducers/userReducer'\n\nimport { TextField, Button, Dialog } from '@material-ui/core'\n\nconst Signupform = ({ flipModalState, isSignUpModalOpen }) => {\n    const name = useField('name')\n    const username = useField('username')\n    const password = useField('password')\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const signup = async (e) => {\n        e.preventDefault()\n        try {\n            const newUser = await userService.signUpUser({\n                username: username.inputValues.value,\n                password: password.inputValues.value,\n                name: name.inputValues.value,\n            })\n\n            const user = await loginService.loginUser({\n                username: username.inputValues.value,\n                password: password.inputValues.value,\n            })\n\n            window.localStorage.setItem('loggedInBlogListUser', JSON.stringify(user))\n            dispatch(setCurrentUser(user))\n\n            dispatch(setNotification(`You have created an account: ${newUser.username}`, false, 4))\n\n            flipModalState()\n            history.push('/')\n        } catch (err) {\n            console.log(err)\n            dispatch(setNotification(`Failed Account Creation`, true, 4))\n            flipModalState()\n        }\n    }\n\n    return (\n        <Dialog\n            open={isSignUpModalOpen}\n            onClose={flipModalState}\n            aria-labelledby=\"form-dialog-title-signup\"\n            className=\"modal\"\n        >\n            <h2 id=\"form-dialog-title-signup\" className=\"modal__title\">\n                Create Account\n            </h2>\n            <div className=\"modal__content\">\n                <form className=\"signup__form modal__form\" onSubmit={signup}>\n                    <div>\n                        <TextField\n                            id=\"signup__name\"\n                            className=\"modal__input\"\n                            placeholder=\"Name\"\n                            type=\"text\"\n                            name=\"name\"\n                            onChange={name.inputValues.onChange}\n                        />\n                    </div>\n                    <div>\n                        <TextField\n                            id=\"signup__username\"\n                            className=\"modal__input\"\n                            placeholder=\"Username\"\n                            type=\"text\"\n                            name=\"username\"\n                            onChange={username.inputValues.onChange}\n                        />\n                    </div>\n                    <div>\n                        <TextField\n                            id=\"signup__password\"\n                            className=\"modal__input\"\n                            placeholder=\"Password\"\n                            type=\"text\"\n                            name=\"password\"\n                            onChange={password.inputValues.onChange}\n                        />\n                    </div>\n                    <p className=\"modal__note\">*case sensitive</p>\n                    <Button variant=\"contained\" className=\"modal__btn\" type=\"submit\">\n                        Sign Up\n                    </Button>\n                </form>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default Signupform\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\n\nexport default function Notification() {\n    const { message, isError } = useSelector((state) => state.notifications)\n\n    const defaultStyles = {\n        color: 'white',\n        background: 'linear-gradient(45deg, #fe6b8b 30%, #ff8e53 90%)',\n        textDecoration: 'underlined',\n    }\n\n    const errorStyles = {\n        color: '#222',\n        backgroundColor: 'white',\n        textDecoration: 'underlined',\n    }\n\n    // isError ? (defaultStyles.color = 'red') : (defaultStyles.color = 'green')\n\n    // console.log(defaultStyles)\n    // console.log(isNotiErr)\n\n    return (\n        <div className=\"nav__loginstatus nav__notification\" style={isError ? errorStyles : defaultStyles}>\n            {isError ? (\n                <HighlightOffIcon className=\"nav__notiIcon\" />\n            ) : (\n                <CheckCircleOutlineIcon className=\"nav__notiIcon\" />\n            )}\n            {isError ? 'ERROR: ' : ''}\n            {message}\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { removeCurrentUser } from '../reducers/userReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { NavLink } from 'react-router-dom'\nimport { useModal } from '../hooks/index'\n\nimport { Button } from '@material-ui/core'\nimport '../styles/nav.scss'\n\nimport Loginform from './Loginform'\nimport Signupform from './Signupform'\nimport Notification from './Notification'\n\nconst Nav = () => {\n    const signInModal = useModal()\n    const signUpModal = useModal()\n    const dispatch = useDispatch()\n    const { notifications, user } = useSelector((state) => state)\n\n    const logoutUser = () => {\n        window.localStorage.removeItem('loggedInBlogListUser')\n        dispatch(removeCurrentUser())\n        dispatch(setNotification('You have logged out', false, 7))\n    }\n\n    const defaultNotification = () => {\n        return user ? <p></p> : <div className=\"nav__loginstatus nav__notification\">// sign in to add thoughts</div>\n    }\n\n    return (\n        <>\n            <div className=\"nav\">\n                <div className=\"nav__left\">\n                    <NavLink activeClassName=\"nav__link--active\" className=\"nav__item nav__link\" to=\"/thoughts\">\n                        Thoughts\n                    </NavLink>\n                    <NavLink activeClassName=\"nav__link--active\" className=\"nav__item nav__link\" to=\"/users\">\n                        Users\n                    </NavLink>\n                </div>\n\n                <div className=\"nav__right\">\n                    {user ? (\n                        <Button\n                            className=\"nav__btn nav__item nav__btn--secondary nav__btn--logout\"\n                            onClick={logoutUser}\n                        >\n                            log out\n                        </Button>\n                    ) : (\n                        <div>\n                            <Button className=\"nav__btn nav__btn--primary\" onClick={signInModal.flipModalState}>\n                                Sign In\n                            </Button>\n                            <Loginform\n                                flipModalState={signInModal.flipModalState}\n                                isSignInModalOpen={signInModal.open}\n                            />\n                            <Button className=\"nav__btn nav__btn--secondary\" onClick={signUpModal.flipModalState}>\n                                Create Account\n                            </Button>\n                            <Signupform\n                                flipModalState={signUpModal.flipModalState}\n                                isSignUpModalOpen={signUpModal.open}\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className=\"nav__info\">\n                {notifications === null ? defaultNotification() : <Notification />}\n                <p className=\"nav__loginstatus\">\n                    Logged In As <span className=\"nav__user\">{user ? user.username : 'Guest'}</span>\n                </p>\n            </div>\n        </>\n    )\n}\n\nexport default Nav\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport Blog from './Blog'\nimport Blogform from './Blogform'\n// import Togglable from './Togglable'\nimport Users from './Users'\nimport User from './User'\nimport Blogdisplay from './Blogdisplay'\nimport Nav from './Nav'\n\nimport { createNewBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nimport '../styles/thoughts.scss'\nimport { Tooltip } from '@material-ui/core'\n\nconst Blogposts = () => {\n    const dispatch = useDispatch()\n    const state = useSelector((state) => state)\n\n    // const blogFromRef = useRef()\n\n    const createBlog = async (newBlog) => {\n        try {\n            dispatch(createNewBlog(newBlog))\n            // blogFromRef.current.flipHidden()\n            dispatch(setNotification('BLOG POST ADDED', false, 10))\n        } catch (exception) {\n            dispatch(setNotification('Err Creating Blog Post', true, 5))\n        }\n    }\n\n    return (\n        <>\n            <Nav />\n            <Switch>\n                <Route path=\"/thoughts/:id\">\n                    <div className=\"thought__display__container\">\n                        <Blogdisplay />\n                    </div>\n                </Route>\n                <Route path=\"/users/:id\">\n                    <div className=\"main__container\">\n                        <User />\n                    </div>\n                </Route>\n                <Route path=\"/users\">\n                    <div className=\"thought__display__container\">\n                        <Users />\n                    </div>\n                </Route>\n                <Route path=\"/thoughts\">\n                    <div className=\"main__container\">\n                        <div className=\"thoughts__container\">\n                            {state.blogs\n                                .sort((a, b) => b.likes - a.likes)\n                                .map((blog) => (\n                                    <Blog key={blog.id} blog={blog} />\n                                ))}\n                        </div>\n                        {state.user ? (\n                            <Blogform createBlog={createBlog} />\n                        ) : (\n                            <Tooltip title=\"Sign in to add thoughts\" placement=\"top-start\" arrow>\n                                <div>\n                                    <Blogform createBlog={createBlog} />\n                                </div>\n                            </Tooltip>\n                        )}\n                    </div>\n                </Route>\n                <Redirect exact from=\"/\" to=\"/thoughts\" />\n            </Switch>\n        </>\n    )\n}\n\nexport default Blogposts\n","import { createMuiTheme } from '@material-ui/core'\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#fe6b8b',\n        },\n        secondary: {\n            main: '#fff',\n        },\n    },\n    overrides: {\n        MuiBackdrop: {\n            root: {\n                backgroundColor: 'rgba(0,0,0,0.7)',\n            },\n        },\n        MuiPaper: {\n            root: {\n                display: 'flex',\n                flexDirection: 'column',\n                background: 'linear-gradient(45deg, #fe6b8b 30%, #ff8e53 90%)',\n                borderRadius: '0px',\n                height: 'fit-content',\n                // width: '400px',\n                // minWidth: '100%',\n            },\n            rounded: {\n                borderRadius: '0px',\n            },\n        },\n        MuiDialog: {\n            container: {\n                height: 'unset',\n            },\n            paperWidthSm: {\n                width: '100%',\n                maxWidth: '400px',\n            },\n            paper: {\n                margin: 'unset',\n            },\n        },\n    },\n})\n\nexport default theme\n","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { initBlogs } from './reducers/blogReducer'\nimport { setCurrentUser } from './reducers/userReducer'\nimport Blogposts from './components/Blogposts'\nimport { Container, ThemeProvider } from '@material-ui/core'\nimport theme from './styles/theme'\n\nconst App = () => {\n    // const state = useSelector((state) => state)\n    const dispatch = useDispatch()\n    // console.log(state, ' => state in <App/> at render')\n\n    const checkIfUserIsLoggedIn = () => {\n        const user = JSON.parse(window.localStorage.getItem('loggedInBlogListUser'))\n        console.log(user)\n        if (user) {\n            dispatch(setCurrentUser(user))\n        }\n    }\n\n    useEffect(checkIfUserIsLoggedIn, [])\n    useEffect(() => {\n        dispatch(initBlogs())\n    }, [dispatch])\n\n    return (\n        <Container>\n            <div className=\"container\">\n                <ThemeProvider theme={theme}>\n                    <Blogposts />\n                </ThemeProvider>\n            </div>\n        </Container>\n    )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport notificationReducer from './reducers/notificationReducer'\nimport blogReducer from './reducers/blogReducer'\nimport userReducer from './reducers/userReducer'\nimport allUsersReducer from './reducers/allUsersReducer'\n\nconst reducers = combineReducers({\n    notifications: notificationReducer,\n    blogs: blogReducer,\n    user: userReducer,\n    allUsers: allUsersReducer,\n})\n\nconst store = createStore(reducers, applyMiddleware(thunk))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport './styles/reset.css'\nimport './App.scss'\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}